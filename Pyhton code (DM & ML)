# churn_prediction.py
# Author: Gerry Aria Rotama
# Project: Prediksi Customer Churn untuk Visualisasi Bisnis
# Description: Membangun model machine learning untuk memprediksi churn pelanggan Telco

# 1. Import library
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, confusion_matrix
from sklearn.preprocessing import LabelEncoder

# 2. Load data
df = pd.read_csv('WA_Fn-UseC_-Telco-Customer-Churn.csv')

# 3. Data cleaning
df['TotalCharges'] = pd.to_numeric(df['TotalCharges'], errors='coerce')
df.dropna(inplace=True)
df.drop(['customerID'], axis=1, inplace=True)

# 4. Encoding categorical features
le = LabelEncoder()
for col in df.select_dtypes(include='object').columns:
    df[col] = le.fit_transform(df[col])

# 5. Pisahkan fitur dan target
X = df.drop('Churn', axis=1)
y = df['Churn']

# 6. Split data latih dan uji
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 7. Inisialisasi dan latih model
model = LogisticRegression(max_iter=1000)
model.fit(X_train, y_train)

# 8. Prediksi
y_pred = model.predict(X_test)

# 9. Evaluasi
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

# 10. Simpan hasil prediksi ke file CSV
X_test_copy = X_test.copy()
X_test_copy['Actual_Churn'] = y_test
X_test_copy['Predicted_Churn'] = y_pred
X_test_copy.to_csv('churn_prediction_output.csv', index=False)

print("\nâœ… Hasil prediksi berhasil disimpan ke churn_prediction_output.csv")
